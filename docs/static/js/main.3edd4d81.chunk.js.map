{"version":3,"sources":["components/AddCategory.js","components/GridGiftItem.js","components/GridGifts.js","GiftExpert.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","onChange","target","value","GridGiftItem","id","title","url","className","src","alt","GridGifts","category","Images","setImages","useEffect","getGifts","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GiftExpert","categories","onClick","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAgBhD,OACE,sBAAMC,SAVO,SAACC,GACdA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACxCN,EAAc,MAKhB,SACE,uBAAOO,KAAK,OAAOC,SAfN,SAACN,GAChBF,EAAcE,EAAEO,OAAOC,QAckBA,MAAOX,O,+BCnBvCY,EAAe,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACxC,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,QCHGK,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACbrB,mBAAS,IADI,mBAClCsB,EADkC,KAC1BC,EAD0B,KAGzCC,qBAAU,WACRC,MACC,CAACJ,IAEJ,IAAMI,EAAQ,uCAAG,oCAAAC,EAAA,6DACTV,EADS,0DACgDW,UAC7DN,GAFa,sDAIIO,MAAMZ,GAJV,cAITa,EAJS,gBAKQA,EAAKC,OALb,gBAKPC,EALO,EAKPA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLpB,GAAIoB,EAAIpB,GACRC,MAAOmB,EAAInB,MACXC,IAAG,UAAEkB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBpB,QAGtCO,EAAUS,GAdK,4CAAH,qDAiBd,OACE,sBAAKf,UAAU,wCAAf,UACE,6BAAKI,IACL,qBAAKJ,UAAU,YAAf,SACGK,EAAOW,KAAI,SAACC,GACX,OAAO,cAAC,EAAD,eAA+BA,GAAZA,EAAIpB,aC5B3BuB,EAAa,WAAO,IAAD,EACMrC,mBAAS,CAAC,KADhB,mBACvBsC,EADuB,KACXvC,EADW,KAI9B,OACE,gCACE,4CACA,uBACA,wBAAQwC,QALO,kBAAMxC,EAAc,GAAD,mBAAKuC,GAAL,CAAiB,gBAKnD,oBACA,cAAC,EAAD,CAAavC,cAAeA,IAE3BuC,EAAWL,KAAI,SAACZ,GACf,OAAO,cAAC,EAAD,CAA0BA,SAAUA,GAApBA,U,MCX/BmB,IAASC,OAAO,cAAC,EAAD,IAAgBC,SAASC,eAAe,W","file":"static/js/main.3edd4d81.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setinputValue] = useState(\"\");\r\n\r\n  const addValue = (e) => {\r\n    setinputValue(e.target.value);\r\n  };\r\n\r\n  const Search = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setinputValue(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={Search}>\r\n      <input type=\"text\" onChange={addValue} value={inputValue}></input>\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GridGiftItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <img src={url} alt={title}></img>\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { GridGiftItem } from \"./GridGiftItem\";\r\n\r\nexport const GridGifts = ({ category }) => {\r\n  const [Images, setImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getGifts();\r\n  }, [category]);\r\n\r\n  const getGifts = async () => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=12&q=${encodeURI(\r\n      category\r\n    )}&api_key=MEJ84Jj9Iv4IYI8V4V5Aj6WmUeN9ai9X`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images?.downsized_medium.url,\r\n      };\r\n    });\r\n    setImages(gifs);\r\n  };\r\n\r\n  return (\r\n    <div className=\"animate__animated animate__fadeInDown\">\r\n      <h3>{category}</h3>\r\n      <div className=\"card-grid\">\r\n        {Images.map((img) => {\r\n          return <GridGiftItem key={img.id} {...img} />;\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GridGifts } from \"./components/GridGifts\";\r\n\r\nexport const GiftExpert = () => {\r\n  const [categories, setCategories] = useState([\"\"]);\r\n\r\n  const AddCategor = () => setCategories([...categories, \"Inu Yasha\"]);\r\n  return (\r\n    <div>\r\n      <h2>GiftExpert</h2>\r\n      <hr />\r\n      <button onClick={AddCategor}>Buscar</button>\r\n      <AddCategory setCategories={setCategories} />\r\n\r\n      {categories.map((category) => {\r\n        return <GridGifts key={category} category={category} />;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { GiftExpert } from \"./GiftExpert\";\nimport \"./index.css\";\n\nReactDOM.render(<GiftExpert />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}